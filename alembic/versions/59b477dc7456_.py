"""empty message

Revision ID: 59b477dc7456
Revises:
Create Date: 2025-07-06 11:34:48.478708

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlmodel.sql.sqltypes import AutoString

# revision identifiers, used by Alembic.
revision: str = "59b477dc7456"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "author",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("name", AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "book",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("isbn_code", AutoString(), nullable=False),
        sa.Column("editor", AutoString(), nullable=False),
        sa.Column("edition", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("PHYSICAL", "EBOOK", name="booktype"),
            nullable=False,
        ),
        sa.Column("publish_date", sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "book_category",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("title", AutoString(), nullable=False),
        sa.Column("description", AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_book_category_title"),
        "book_category",
        ["title"],
        unique=False,
    )
    op.create_table(
        "branch",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("name", AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_configuration",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column(
            "user_type",
            sa.Enum(
                "ADMIN",
                "NORMAL",
                "LIBRARIAN",
                "STUDENT",
                "TEACHER",
                name="usertype",
            ),
            nullable=False,
        ),
        sa.Column("max_books", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "author_book_link",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("author_id", sa.Uuid(), nullable=False),
        sa.Column("book_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["author_id"], ["author.id"]),
        sa.ForeignKeyConstraint(["book_id"], ["book.id"]),
        sa.PrimaryKeyConstraint("id", "author_id", "book_id"),
    )
    op.create_index(
        op.f("ix_author_book_link_author_id"),
        "author_book_link",
        ["author_id"],
        unique=False,
    )
    op.create_table(
        "book_book_category_link",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("book_id", sa.Uuid(), nullable=False),
        sa.Column("book_category_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["book_category_id"], ["book_category.id"]),
        sa.ForeignKeyConstraint(["book_id"], ["book.id"]),
        sa.PrimaryKeyConstraint("id", "book_id", "book_category_id"),
    )
    op.create_index(
        op.f("ix_book_book_category_link_book_category_id"),
        "book_book_category_link",
        ["book_category_id"],
        unique=False,
    )
    op.create_table(
        "book_data",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("language", AutoString(), nullable=False),
        sa.Column("summary", AutoString(), nullable=True),
        sa.Column("title", AutoString(), nullable=False),
        sa.Column("book_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["book_id"], ["book.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_book_data_title"), "book_data", ["title"], unique=False)
    op.create_table(
        "physical_exemplar",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("available", sa.Boolean(), nullable=False),
        sa.Column("room", sa.Integer(), nullable=False),
        sa.Column("floor", sa.Integer(), nullable=False),
        sa.Column("bookshelf", sa.Integer(), nullable=False),
        sa.Column("book_id", sa.Uuid(), nullable=True),
        sa.Column("branch_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["book_id"], ["book.id"]),
        sa.ForeignKeyConstraint(["branch_id"], ["branch.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_physical_exemplar_book_id"),
        "physical_exemplar",
        ["book_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_physical_exemplar_branch_id"),
        "physical_exemplar",
        ["branch_id"],
        unique=False,
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("name", AutoString(), nullable=False),
        sa.Column("user_configuration_id", sa.Uuid(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["user_configuration_id"], ["user_configuration.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "book_lending",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", AutoString(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", AutoString(), nullable=False),
        sa.Column("reserved_at", sa.DateTime(), nullable=True),
        sa.Column("lend_at", sa.DateTime(), nullable=True),
        sa.Column("returned_at", sa.DateTime(), nullable=True),
        sa.Column("planned_returned_at", sa.DateTime(), nullable=True),
        sa.Column("physical_exemplar_id", sa.Uuid(), nullable=True),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["physical_exemplar_id"], ["physical_exemplar.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("book_lending")
    op.drop_table("user")
    op.drop_index(
        op.f("ix_physical_exemplar_branch_id"),
        table_name="physical_exemplar",
    )
    op.drop_index(op.f("ix_physical_exemplar_book_id"), table_name="physical_exemplar")
    op.drop_table("physical_exemplar")
    op.drop_index(op.f("ix_book_data_title"), table_name="book_data")
    op.drop_table("book_data")
    op.drop_index(
        op.f("ix_book_book_category_link_book_category_id"),
        table_name="book_book_category_link",
    )
    op.drop_table("book_book_category_link")
    op.drop_index(op.f("ix_author_book_link_author_id"), table_name="author_book_link")
    op.drop_table("author_book_link")
    op.drop_table("user_configuration")
    op.drop_table("branch")
    op.drop_index(op.f("ix_book_category_title"), table_name="book_category")
    op.drop_table("book_category")
    op.drop_table("book")
    op.drop_table("author")
    # ### end Alembic commands ###
